# Data Regularized-Q (DrQ) form Kostrikov et al. (2020)
# Note that this is actually DrQ (epsilon) as reported in Agarwal et al (2021),
# where standard values of epsilon are used. This yields performance higher than
# the original DrQ algorithm as published, which had epsilon_train=0.1 and epsilon_eval=0.01.
import dopamine.jax.networks
import dopamine.discrete_domains.gym_lib
import dopamine.discrete_domains.run_experiment
import dopamine.replay_memory.prioritized_replay_buffer
import bbf.spr_networksimport bbf.agents.spr_agentimport bbf.replay_memimport bbf.ory.subsequence_replay_buffer.spr_networks
import bbf.spr_networksimport bbf.agents.spr_agentimport bbf.replay_memimport bbf.ory.subsequence_replay_buffer.agents.rainbow_agent
import bbf.spr_networksimport bbf.agents.spr_agentimport bbf.replay_memimport bbf.ory.subsequence_replay_buffer.replay_memory.subsequence_replay_buffer

# Parameters specific to DrQ are higlighted by comments
JaxDQNAgent.gamma = 0.99
JaxDQNAgent.update_horizon = 10    # DrQ (instead of 3)
JaxDQNAgent.min_replay_history = 1600    # DrQ (instead of 20000)
JaxDQNAgent.epsilon_train = 0.01
JaxDQNAgent.epsilon_eval = 0.001
JaxDQNAgent.epsilon_decay_period = 2500    # DrQ
JaxDQNAgent.optimizer = 'adam'

BBFAgent.replay_ratio = 32
BBFAgent.batch_size = 32
BBFAgent.target_update_period = 1    # DrQ (rather than 8000)

# Note these parameters are from DER (van Hasselt et al, 2019)
bbf.agents.rainbow_agent.create_scaling_optimizer.learning_rate = 0.0001
bbf.agents.rainbow_agent.create_scaling_optimizer.eps = 0.00015

# Atari 100K benchmark doesn't use sticky actions.
atari_lib.create_atari_environment.sticky_actions = False
AtariPreprocessing.terminal_on_life_loss = True
Runner.num_iterations = 1

bbf.replay_memory.subsequence_replay_buffer.PrioritizedJaxSubsequenceParallelEnvReplayBuffer.replay_capacity = 200000
bbf.replay_memory.subsequence_replay_buffer.JaxSubsequenceParallelEnvReplayBuffer.replay_capacity = 200000

